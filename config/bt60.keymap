#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define L_FX    1
#define L_MAC   2
#define L_CAPS  3
#define L_ALT   4

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
				// ------------------------------------------------------------------------------------------
				// |  `  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP
				// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |        |
				// | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |  #  | ENTER |
				// |  SHIFT|  \ |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  | /    |    SHIFT    |
				// |  CTL  |  WIN  |  ALT  |            SPACE               | ALT | WIN    |  CTLR    |  1 |
				// ------------------------------------------------------------------------------------------
			bindings = <

				&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp  N8   &kp  N9 &kp  N0  &kp MINUS &kp EQUAL &kp BSPC
				&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp  I    &kp  O  &kp  P   &kp LBKT &kp RBKT
				&lt L_CAPS ESC &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp  K    &kp  L  &kp SEMI &kp SQT &kp NON_US_HASH  &kp RET
				&kp LSHFT &kp NON_US_BSLH &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH         &kp RSHFT
				&kp LCTRL &kp LWIN &lt L_ALT LALT            &kp SPACE                          &kp RALT  &kp RWIN &kp RCTRL &mo L_FX
			>;
		};
		
		fx_layer {
			bindings = <
				&bootloader &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &reset
				&none &bt BT_CLR &bt BT_PRV &bt BT_NXT &out OUT_TOG &none &none &out OUT_USB &none &none &none &none &none
				&none &none &none &none &none &none &none &none	&none &none &none &none &none &none
				&none &none &none &none &none &none &out OUT_BLE &none &tog L_MAC &none &none &kp UP &rgb_ug RGB_TOG
				&none &none &none &none &kp LEFT &kp DOWN &kp RIGHT &trans
			>;
		};
		
		mac_layer {
			bindings = <
				&kp NON_US_BSLH &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans	&trans &trans &trans &trans &trans &trans
				&kp GRAVE &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&kp LWIN &kp LCTRL &kp LALT &trans &kp RALT &kp RCTRL &kp RWIN &trans
			>;
        	};
		
		caps_layer {
			bindings = <
				&kp LC(GRAVE) &kp LC(N1) &kp LC(N2) &kp LC(N3) &kp LC(N4) &kp LC(N5) &kp LC(N6) &kp LC(N7) &kp LC(N8) &kp LC(N9) &kp LC(N0) &kp LC(MINUS) &kp LC(EQUAL) &kp LC(BSPC)
				&kp LC(TAB) &kp LC(Q) &kp LC(W) &kp LC(E) &kp LC(R) &kp LC(T) &kp LC(Y) &kp LC(U) &kp LC(I) &kp LC(O) &kp LC(P) &kp LC(LBKT) &kp LC(RBKT)
				&trans &kp LC(A) &kp LC(S) &kp LC(D) &kp LC(F) &kp LC(G) &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp LC(SEMI) &kp LC(SQT) &kp LC(NON_US_HASH) &kp LC(RET)
				&kp LC(LSHFT) &kp LC(NON_US_BSLH) &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp LC(B) &kp LC(N) &kp LC(M) &kp LC(COMMA) &kp LC(DOT) &kp LC(FSLH) &kp LC(RSHFT)
				&kp LC(LCTRL) &kp LC(LWIN) &kp LC(LALT) &kp LC(SPACE) &kp LC(RALT) &kp LC(RWIN) &kp LC(RCTRL) &trans
            		>;
        	};

		alt_layer {
			bindings = <
				&kp LA(GRAVE) &kp LA(N1) &kp LA(N2) &kp LA(N3) &kp LA(N4) &kp LA(N5) &kp LA(N6) &kp RA(N7) &kp RA(N8) &kp RA(N9) &kp RA(N0) &kp RA(MINUS) &kp LA(EQUAL) &kp LA(BSPC)
				&kp LA(TAB) &kp RA(Q) &kp LA(W) &kp LA(E) &kp LA(R) &kp LA(T) &kp LA(Y) &kp LA(U) &kp LA(I) &kp LA(O) &kp LA(P) &kp LA(LBKT) &kp LA(RBKT)
				&kp LA(ESC) &kp LA(A) &kp LA(S) &kp LA(D) &kp LA(F) &kp LA(G) &kp LA(H) &kp LA(J) &kp LA(K) &kp LA(L) &kp LA(SEMI) &kp LA(SQT) &kp LA(NON_US_HASH) &kp LA(RET)
				&kp LA(LSHFT) &kp LA(NON_US_BSLH) &kp LA(Z) &kp LA(X) &kp LA(C)	&kp LA(V) &kp LA(B) &kp LA(N) &kp LA(M)	&kp LA(COMMA) &kp LA(DOT) &kp LA(FSLH) &kp LA(RSHFT)
				&kp LA(LCTRL) &kp LA(LWIN) &kp LA(LALT) &kp LA(SPACE) &kp LA(RALT) &kp LA(RWIN) &kp LA(RCTRL) &trans
			>;
		};
	};
};
